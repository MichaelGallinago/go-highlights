# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import api_pb2 as api__pb2


class RequesterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTopLongMemes = channel.unary_unary(
                '/api.RequesterService/GetTopLongMemes',
                request_serializer=api__pb2.TopLongMemesHighlightRequest.SerializeToString,
                response_deserializer=api__pb2.HighlightResponse.FromString,
                )
        self.SearchMemesBySubstring = channel.unary_unary(
                '/api.RequesterService/SearchMemesBySubstring',
                request_serializer=api__pb2.SearchHighlightRequest.SerializeToString,
                response_deserializer=api__pb2.HighlightResponse.FromString,
                )
        self.GetMemesByMonth = channel.unary_unary(
                '/api.RequesterService/GetMemesByMonth',
                request_serializer=api__pb2.MonthHighlightRequest.SerializeToString,
                response_deserializer=api__pb2.HighlightResponse.FromString,
                )
        self.GetRandomMeme = channel.unary_unary(
                '/api.RequesterService/GetRandomMeme',
                request_serializer=api__pb2.EmptyHighlightRequest.SerializeToString,
                response_deserializer=api__pb2.HighlightResponse.FromString,
                )


class RequesterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTopLongMemes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchMemesBySubstring(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMemesByMonth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRandomMeme(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RequesterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTopLongMemes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopLongMemes,
                    request_deserializer=api__pb2.TopLongMemesHighlightRequest.FromString,
                    response_serializer=api__pb2.HighlightResponse.SerializeToString,
            ),
            'SearchMemesBySubstring': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchMemesBySubstring,
                    request_deserializer=api__pb2.SearchHighlightRequest.FromString,
                    response_serializer=api__pb2.HighlightResponse.SerializeToString,
            ),
            'GetMemesByMonth': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMemesByMonth,
                    request_deserializer=api__pb2.MonthHighlightRequest.FromString,
                    response_serializer=api__pb2.HighlightResponse.SerializeToString,
            ),
            'GetRandomMeme': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRandomMeme,
                    request_deserializer=api__pb2.EmptyHighlightRequest.FromString,
                    response_serializer=api__pb2.HighlightResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.RequesterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RequesterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTopLongMemes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RequesterService/GetTopLongMemes',
            api__pb2.TopLongMemesHighlightRequest.SerializeToString,
            api__pb2.HighlightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchMemesBySubstring(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RequesterService/SearchMemesBySubstring',
            api__pb2.SearchHighlightRequest.SerializeToString,
            api__pb2.HighlightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMemesByMonth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RequesterService/GetMemesByMonth',
            api__pb2.MonthHighlightRequest.SerializeToString,
            api__pb2.HighlightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRandomMeme(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.RequesterService/GetRandomMeme',
            api__pb2.EmptyHighlightRequest.SerializeToString,
            api__pb2.HighlightResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
